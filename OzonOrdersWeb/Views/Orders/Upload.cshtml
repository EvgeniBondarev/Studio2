<style>
    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.5); /* Полупрозрачный фон */
    }

    .modal-content {
        background-color: #fefefe;
        margin: 15% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%; /* Ширина контента */
    }

    .progress {
        margin: 20px 0; /* Отступы сверху и снизу */
    }
</style>

@{
    string erorrResult = (string)ViewData["ErorrResult"]; 
}

@if (erorrResult != null)
{
    <div class="alert alert-dismissible alert-danger">
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        <p>@Html.Raw(erorrResult)</p>
    </div>
}

<h1>Заказы</h1>
<hr />
<div class="container mt-5">
    <h1>Загрузка периода</h1>
    <hr />
    <div class="row">
        <div class="col-md-6">
            <form method="post" id="uploadForm">
                <div class="form-group">
                    <label for="period">Выберите период:</label>
                    <select class="form-control" id="period" name="Period">
                        <option value="1">Сегодня</option>
                        <option value="2">Два дня</option>
                        <option value="7">Неделя</option>
                        <option value="14">Две недели</option>
                        <option value="30">Месяц</option>
                    </select>
                </div>
                <br />
                <div class="form-group">
                    <label for="clientType">Выберите тип клиента:</label>
                    <select class="form-control" id="clientType" name="ClientType">
                        <option value="0">Все</option>
                        <option value="1">Ozon</option>
                        <option value="2">Yandex</option>
                    </select>
                </div>
                <br />
                <button type="submit" class="btn btn-primary">Загрузить</button>
            </form>
        </div>
    </div>
    <div>
        <a asp-action="Index">Назад</a>
    </div>
</div>


<div class="container mt-5">
    <h1 class="mb-4">Загрузка файла</h1>
    <hr />

    @using (Html.BeginForm("UploadExcelFile", "Orders", FormMethod.Post, new { enctype = "multipart/form-data", @class = "needs-validation", novalidate = "novalidate" }))
    {
        <div class="row">
            <div class="col-md-6 mb-3">
                <label for="fileInput" class="form-label">Выберите файл для загрузки</label>
                <input type="file" class="form-control" id="fileInput" name="file" accept=".xlsx,.csv" required>
                <div class="invalid-feedback">
                    Пожалуйста, выберите файл для загрузки.
                </div>
            </div>
        </div>


        <div id="startInputs" style="display: none;" class="col-md-6 mb-3">
            <div class="row">
                <div class="col-md-6">
                        <label for="startRowInput" class="form-label">Начальная строка</label>
                        <input type="number" class="form-control" id="startRowInput" name="startRow" value="1">
               </div>
               <div class="col-md-6">
                        <label for="startColumnInput" class="form-label">Начальный столбец</label>
                        <input type="number" class="form-control" id="startColumnInput" name="startColumn" value="1">
               </div>
            </div>
        </div>

        <div id="delimiterInput" style="display: none;" class="col-md-6 mb-3">
            <label for="delimiter" class="form-label">Знак разделения (CSV)</label>
            <input type="text" class="form-control" id="delimiter" name="delimiter" value=";">
        </div>


        <div class="row">
            <div class="col-md-6 mb-3">
                <button type="submit" class="btn btn-primary" id="submitBtn" disabled>Загрузить</button>
            </div>
        </div>
    }

    @if (!string.IsNullOrEmpty(ViewBag.Message))
    {
        <div class="alert alert-info mt-4">
            @ViewBag.Message
        </div>
    }
</div>

<script>
    document.getElementById('fileInput').addEventListener('change', function () {
        var file = this.files[0];
        if (file) {
            var extension = file.name.split('.').pop().toLowerCase();
            if (extension === 'csv') {
                document.getElementById('delimiterInput').style.display = 'block';
                document.getElementById('startInputs').style.display = 'block';
            } else {
                document.getElementById('delimiterInput').style.display = 'none';
                document.getElementById('startInputs').style.display = 'block';
            }
        }
    });
</script>


<script>
    document.getElementById('fileInput').addEventListener('change', function() {
        // Показываем блок с полями ввода начальных значений после выбора файла
        document.getElementById('startInputs').style.display = 'block';
        // Активируем кнопку "Загрузить"
        document.getElementById('submitBtn').disabled = false;
    });
</script>



<script>
    // JavaScript для проверки наличия выбранного файла
    document.addEventListener('DOMContentLoaded', function () {
        var fileInput = document.getElementById('fileInput');
        fileInput.addEventListener('change', function () {
            var fileName = this.value;
            var feedbackElement = document.querySelector('#fileInput + .invalid-feedback');
            if (fileName.trim() !== '') {
                this.classList.remove('is-invalid');
                feedbackElement.style.display = 'none';
            } else {
                this.classList.add('is-invalid');
                feedbackElement.style.display = 'block';
            }
        });
    });
</script>



<div id="loadingModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>Загрузка...</h3>
        </div>
        <div class="modal-body">
            <div class="progress">
                <div id="progressBar" class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
            </div>
        </div>
    </div>
</div>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>
    document.getElementById('uploadForm').addEventListener('submit', function (e) {
        e.preventDefault(); // Предотвратить отправку формы
        showModal(); // Показать модальное окно
        const period = document.getElementById('period').value; // Получаем выбранный период

        animateProgressBar(); // Запустить анимацию полосы загрузки

        // Отправить форму после анимации полосы загрузки
        setTimeout(() => {
            // Создаем скрытое поле для передачи числа
            const hiddenInput = document.createElement('input');
            hiddenInput.type = 'hidden';
            hiddenInput.name = 'Period';
            hiddenInput.value = period;
            document.getElementById('uploadForm').appendChild(hiddenInput);
            document.getElementById('uploadForm').submit();
        }, 6000); // 4 минуты (60 * 1000 * 4)
    });

    function showModal() {
        var modal = document.getElementById('loadingModal');
        modal.style.display = 'block';
        // Запретить действие на странице
        document.body.style.pointerEvents = 'none';
    }

    function animateProgressBar() {
        var progressBar = document.getElementById('progressBar');
        var width = 0;
        const period = document.getElementById('period').value;

        console.log(period)

        switch (parseInt(period)) {
            case -15:
                speed = 0.5;
                break;
            case -30:
                speed = 0.25;
                break;
            case -60:
                speed = 0.25;
                break;
            case 1: 
                speed = 0.25; 
                break;
            case 2:
                speed = 0.25;
                break;
            case 7: // Неделя
                speed = 0.0625; 
                break;
            case 14: // Две недели
                speed = 0.0312; 
                break;
            case 30: // Месяц
                speed = 0.0156; 
                break;
            default:
                speed = 0.5; 
        }

        var intervalId = setInterval(function () {
            if (width >= 100) {
                clearInterval(intervalId);
            } else {
                width += 0.5; // увеличьте скорость анимации здесь
                progressBar.style.width = width + '%';
                progressBar.setAttribute('aria-valuenow', width);
            }
        }, 100 / speed); // скорость анимации
    }
</script>

