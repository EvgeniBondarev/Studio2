@using OzonDomains.Models
@model IEnumerable<UserAccess>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .underline-input input {
        border: none;
        border-bottom: 1px solid #ced4da; /* Bootstrap's gray border color */
        outline: none;
        width: 100%;
        box-shadow: none;
        border-radius: 0;
    }

    .btn-link {
        color: #007bff;
        font-size: 0.875rem;
        text-decoration: none;
        background: transparent;
    }

        .btn-link:hover {
            color: #0056b3;
            text-decoration: underline;
        }

</style>


<div class="container ">
    <div class="row">
        <div>
            <div class="card">
                <div class="card-header">
                    <h2>Права доступа пользователей</h2>
                    <p>
                        <a asp-action="Create">Создать право доступа</a>
                    </p>
                </div>
                <div class="card-body">
                    <table class="table">
                        <thead>
                            <th>
                                    @Html.DisplayNameFor(model => model.Name)
                            </th>
                            <th>
                                    @Html.DisplayNameFor(model => model.AvailableOrderColumns)
                            </th>
                            <th></th>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        <form asp-action="Edit" method="post" oninput="toggleSaveButton(this)">
                                            <input type="hidden" name="Id" value="@item.Id" />
                                            <input type="hidden" name="AvailableOrderColumns" value="@string.Join(",", item.AvailableOrderColumns ?? new List<string>())" />
                                            <div class="underline-input">
                                                <input type="text" name="Name" class="form-control form-control-sm" value="@item.Name" placeholder="Название" />
                                            </div>
                                            <button type="submit" class="btn btn-link" style="display: none;">Сохранить</button>
                                        </form>
                                    </td>
                                    @{
                                        var maxItems = 10;
                                        var availableOrderColumns = item.AvailableOrderColumns?.Take(maxItems).ToList() ?? new List<string>();
                                        string columns = string.Join(", ", availableOrderColumns);

                                        if (item.AvailableOrderColumns != null && item.AvailableOrderColumns.Count > maxItems)
                                        {
                                            columns += "...";
                                        }
                                    }
                                    <td>
                                        @columns
                                    </td>
                                    <td>
                                        <a class="btn btn-sm btn-primary" asp-action="Edit" asp-route-id="@item.Id">Изменить</a>
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    function toggleSaveButton(form) {
        var button = form.querySelector('button[type="submit"]');
        button.style.display = 'inline'; // Показываем кнопку при изменении поля
    }
</script>
