@using OzonDomains.Models
@model UserAccess

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Изменить</h1>

<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AvailableOrderColumns" class="control-label">Доступные столбцы в таблице заказов</label>
                <br />
                @foreach (var column in ViewData["AvailableOrderColumns"] as List<string>)
                {
                    <div class="checkbox">
                        <label>
                            @{
                                var isChecked = Model.AvailableOrderColumns != null && Model.AvailableOrderColumns.Contains(column);
                            }
                            <input type="checkbox" name="AvailableOrderColumns" value="@column" @(isChecked ? "checked" : "") /> @column
                        </label>
                    </div>
                }
                <span asp-validation-for="AvailableOrderColumns" class="text-danger"></span>
            </div>
            <br />
            <br />
            <div class="form-group">
                <input type="submit" value="Сохранить" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">К списку прав</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
