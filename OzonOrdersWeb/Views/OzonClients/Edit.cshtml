@using OzonOrdersWeb.ViewModels.OzonClientViewModels
@model EditOzonClientViewModel
@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .bi-eye-slash-fill {
        width: 16px;
        height: 16px;
        fill: currentColor;
    }
</style>
@{
    string status = (string)ViewData["EditInfo"];
}
@if (status != null)
{
    <div class="alert alert-dismissible alert-danger">
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        <p>@status</p>
    </div>
}
<h1>Изменение клиента</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="OzonClient.Id" />
            <div class="form-group">
                <label asp-for="OzonClient.Name" class="control-label"></label>
                <input asp-for="OzonClient.Name" class="form-control" />
                <span asp-validation-for="OzonClient.Name" class="text-danger"></span>
            </div>
            @if (Model.OzonClient.ApiKey != null && Model.OzonClient.ClientId != null)
            {
                <div class="form-group">
                    <label asp-for="OzonClient.ClientId" class="control-label"></label>
                    <input asp-for="OzonClient.ClientId" value="@Model.OzonClient.DecryptClientId" class="form-control" />
                    <span asp-validation-for="OzonClient.ClientId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="OzonClient.ApiKey" class="control-label"></label>
                    <div class="input-group">
                        <input asp-for="OzonClient.ApiKey" id="apiKeyInput" type="password" value="@Model.OzonClient.DecryptApiKey" class="form-control" />
                        <div class="input-group-append">
                            <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eye-fill" viewBox="0 0 16 16">
                                    <path d="M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0" />
                                    <path d="M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8m8 3.5a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7" />
                                </svg>
                            </button>
                        </div>
                    </div>
                    <span asp-validation-for="OzonClient.ApiKey" class="text-danger"></span>
                </div>
            }
            <div class="form-group">
                <label asp-for="OzonClient.CurrencyCode" class="control-label"></label>
                <select asp-for="OzonClient.CurrencyCode" class="form-control" asp-items="Model.CurrencyCodes"></select>
                <span asp-validation-for="OzonClient.CurrencyCode" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="OzonClient.ClientType" class="control-label"></label>
                <select asp-for="OzonClient.ClientType" class="form-control" asp-items="Model.ClientTypes"></select>
                <span asp-validation-for="OzonClient.ClientType" class="text-danger"></span>
            </div>
            <div class="form-group" style="display : none">
                <label asp-for="OzonClient.DecryptApiKey" class="control-label"></label>
                <input asp-for="OzonClient.DecryptApiKey" class="form-control" />
                <span asp-validation-for="OzonClient.DecryptApiKey" class="text-danger"></span>
            </div>
            <div class="form-group" style="display : none">
                <label asp-for="OzonClient.DecryptClientId" class="control-label"></label>
                <input asp-for="OzonClient.DecryptClientId" class="form-control" />
                <span asp-validation-for="OzonClient.DecryptClientId" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Сохранить" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<script>
    // Обновляет скрытые поля при изменении значений полей ввода
    function updateHiddenFields() {
        var apiKeyInput = document.getElementById('apiKeyInput');
        var decryptApiKeyInput = document.getElementById('DecryptApiKey');
        var clientIdInput = document.getElementById('ClientId');
        var decryptClientIdInput = document.getElementById('DecryptClientId');

        decryptApiKeyInput.value = apiKeyInput.value;
        decryptClientIdInput.value = clientIdInput.value;
    }

    // Обработчик события при отправке формы
    document.querySelector('form').addEventListener('submit', updateHiddenFields);

    // Обработчик события при изменении значения поля API ключа
    document.getElementById('apiKeyInput').addEventListener('input', updateHiddenFields);
</script>


<script>
    document.getElementById('togglePassword').addEventListener('click', function (e) {
        var passwordInput = document.getElementById('apiKeyInput');
        var type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
        passwordInput.setAttribute('type', type);

        // Toggle the eye icon
        this.querySelector('svg').classList.toggle('bi-eye-fill');
        this.querySelector('svg').classList.toggle('bi-eye-slash-fill');
    });
</script>


<div>
    <a asp-action="Index">К списку клиентов</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
